import{e as l}from"./index-xKrTDA7N.js";const o=l((a,t)=>({news:[],loading:!1,error:null,addNews:async n=>{a({loading:!0});try{const r={...n,id:Date.now().toString(),createdAt:new Date,updatedAt:new Date,readCount:0,archived:!1};a(e=>({news:[...e.news,r],loading:!1}))}catch{a({error:"Failed to add news",loading:!1})}},updateNews:async(n,r)=>{a({loading:!0});try{a(e=>({news:e.news.map(d=>d.id===n?{...d,...r,updatedAt:new Date}:d),loading:!1}))}catch{a({error:"Failed to update news",loading:!1})}},archiveNews:async n=>{a({loading:!0});try{a(r=>({news:r.news.map(e=>e.id===n?{...e,archived:!0,archivedAt:new Date,status:"archived"}:e),loading:!1}))}catch{a({error:"Failed to archive news",loading:!1})}},deleteNews:async n=>{a({loading:!0});try{a(r=>({news:r.news.filter(e=>e.id!==n),loading:!1}))}catch{a({error:"Failed to delete news",loading:!1})}},getNewsByAudience:n=>{const{news:r}=t();return r.filter(e=>!e.archived&&(e.targetAudience===n||e.targetAudience==="all")&&e.status==="published"&&new Date(e.publishDate)<=new Date).sort((e,d)=>d.publishDate.getTime()-e.publishDate.getTime())}}));export{o as u};
