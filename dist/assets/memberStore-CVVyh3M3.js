import{e as s}from"./index-xKrTDA7N.js";const i=[{id:"1",firstName:"Max",lastName:"Mustermann",memberNumber:"M001",email:"max.mustermann@example.com",phone:"+49 123 456789",status:"active",joinDate:new Date("2023-01-15"),lastLogin:new Date("2024-03-10"),brokerId:"1",address:{street:"MusterstraÃŸe 123",city:"Berlin",postalCode:"10115",country:"Deutschland"}},{id:"2",firstName:"",lastName:"",memberNumber:"M002",email:"invited.user@example.com",status:"invited",joinDate:new Date,brokerId:"1",invitedAt:new Date("2024-03-15")}],l=s((e,m)=>({members:i,invitations:[],filters:{},loading:!1,error:null,fetchMembers:async r=>{e({loading:!0});try{const t=r?i.filter(a=>a.brokerId===r):i;e({members:t,loading:!1})}catch{e({error:"Failed to fetch members",loading:!1})}},getMembersForBroker:r=>m().members.filter(t=>t.brokerId===r),inviteMember:async(r,t)=>{e({loading:!0});try{const a={id:Date.now().toString(),firstName:"",lastName:"",memberNumber:`M${Date.now().toString().slice(-3)}`,email:t,status:"invited",joinDate:new Date,brokerId:r,invitedAt:new Date};return e(n=>({members:[...n.members,a],loading:!1})),Promise.resolve()}catch(a){return e({error:"Failed to invite member",loading:!1}),Promise.reject(a)}}}));export{l as u};
