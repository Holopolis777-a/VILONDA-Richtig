import{e as i}from"./index-xKrTDA7N.js";const n=[{id:"1",name:"John Smith",email:"john.smith@example.com",phone:"+49 123 456789",company:"Auto Lease Pro GmbH",address:{street:"HauptstraÃŸe 123",city:"Berlin",postalCode:"10115",country:"Germany"},status:"active",createdAt:new Date,membersCount:45,activeOrders:12}],d=i(e=>({brokers:[],loading:!1,error:null,fetchBrokers:async()=>{e({loading:!0});try{await new Promise(a=>setTimeout(a,1e3)),e({brokers:n,loading:!1})}catch{e({error:"Failed to fetch brokers",loading:!1})}},addBroker:async a=>{e({loading:!0});try{await new Promise(r=>setTimeout(r,1e3));const o={...a,id:Date.now().toString(),createdAt:new Date};e(r=>({brokers:[...r.brokers,o],loading:!1}))}catch{e({error:"Failed to add broker",loading:!1})}},updateBroker:async(a,o)=>{e({loading:!0});try{await new Promise(r=>setTimeout(r,1e3)),e(r=>({brokers:r.brokers.map(t=>t.id===a?{...t,...o}:t),loading:!1}))}catch{e({error:"Failed to update broker",loading:!1})}},deleteBroker:async a=>{e({loading:!0});try{await new Promise(o=>setTimeout(o,1e3)),e(o=>({brokers:o.brokers.filter(r=>r.id!==a),loading:!1}))}catch{e({error:"Failed to delete broker",loading:!1})}}}));export{d as u};
